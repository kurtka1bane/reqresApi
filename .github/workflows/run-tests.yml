name: Run API Tests with Gradle

on:
  workflow_dispatch:  # –¢–æ–ª—å–∫–æ —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä—É–µ–º –∫–æ–¥
      - uses: actions/checkout@v4

      # –®–∞–≥ 2: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # –®–∞–≥ 3: –î–µ–ª–∞–µ–º gradlew –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
      - name: Make gradlew executable
        run: chmod +x gradlew

      # –®–∞–≥ 4: –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      - name: Run tests and parse results
        id: run_tests
        run: |
          # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã (–¥–∞–∂–µ –µ—Å–ª–∏ —á–∞—Å—Ç—å —É–ø–∞–¥—ë—Ç)
          ./gradlew test --continue || true
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
          sudo apt-get update && sudo apt-get install -y python3
          
          # –°–æ–∑–¥–∞—ë–º Python-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
          cat << 'EOF' > parse_tests.py
          import xml.etree.ElementTree as ET
          import glob
          import json
          failed_tests = []
          for xml_file in glob.glob("build/test-results/test/*.xml"):
              tree = ET.parse(xml_file)
              root = tree.getroot()
              for testcase in root.findall(".//testcase"):
                  if testcase.find("failure") is not None:
                      classname = testcase.get("classname").split(".")[-1]
                      name = testcase.get("name")
                      failed_tests.append(f"{classname}.{name}")
          # –í—ã–≤–æ–¥–∏–º –∫–∞–∫ JSON-–º–∞—Å—Å–∏–≤ (–ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, –µ—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤ –Ω–µ—Ç)
          print(f"::set-output name=failed::{json.dumps(failed_tests) if failed_tests else '[]'}")
          print(f"::set-output name=failed_count::{len(failed_tests)}")
          EOF
          
          # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–∞—Ä—Å–∏–Ω–≥
          python3 parse_tests.py >> $GITHUB_OUTPUT
          
          # –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤
          TOTAL_TESTS=$(grep -o 'tests="[0-9]*"' build/test-results/test/*.xml | awk -F'"' '{sum+=$2} END {print sum}')
          echo "::set-output name=total::$TOTAL_TESTS" >> $GITHUB_OUTPUT
          echo "::set-output name=passed::$(($TOTAL_TESTS - ${steps.run_tests.outputs.failed_count}))" >> $GITHUB_OUTPUT

      # –®–∞–≥ 5: –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç—ã
      - name: Upload test reports
        id: upload_artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            build/reports/tests/
            build/test-results/

      # –®–∞–≥ 6: –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ Telegram
      - name: Send detailed test results to Telegram
        if: always()
        uses: appleboy/telegram-action@v1.0.0
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            "üìä *–î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤*"
            "‚îú‚îÄ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${{ steps.run_tests.outputs.total }}"
            "‚îú‚îÄ ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${{ steps.run_tests.outputs.passed }}"
            "‚îú‚îÄ ‚ùå –£–ø–∞–ª–æ: ${{ steps.run_tests.outputs.failed_count }}"
            ${{ steps.run_tests.outputs.failed_count != '0' && format('‚îú‚îÄ –°–ø–∏—Å–æ–∫ —É–ø–∞–≤—à–∏—Ö:\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ {0}', join(fromJSON(steps.run_tests.outputs.failed), '\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ')) || '‚îú‚îÄ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!' }}
            "‚îú‚îÄ –ó–∞–ø—É—Å–∫: [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            "‚îî‚îÄ –û—Ç—á—ë—Ç: [–°–∫–∞—á–∞—Ç—å](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.upload_artifacts.outputs.artifact-id }})"
          format: "markdown"
          disable_web_page_preview: true